<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_homable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_enemy_explosion,1,false)
instance_create(x,y,obj_explosion_small)
instance_create(x,y,obj_boostorb)

draw_effect(spr_enemycollision,0,1,1, false)

global.enemies += 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !canHit
{
    if hspeed &gt;= 0
        image_angle += 25
    else 
        image_angle -= 25
    if collision_circle(x,y-5,8,obj_walls,true,true)
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Shadow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.sprp == spr_Shadow_spinjump &amp;&amp; !other.ground &amp;&amp; !instance_exists(obj_boostfx)
{
    if other.action == consPlayerActionHomingTarget
    {
        other.image_i = 2
        other.action = consPlayerActionTrick
        other.sprp = spr_Shadow_jump // choose(spr_Sonic_trick1,spr_Sonic_trick2,spr_Sonic_trick3)
        canHit = false
        hspeed = other.xdir*other.hspeed*cos(degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y)))*0.5
        vspeed = other.vspeed*sin(-degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y)))*0.5
        other.hsp = 0
        other.vsp = -6.5
        alarm[0] = 30
        audio_play_sound(choose(snd_SonicAttack1,snd_SonicAttack2,snd_SonicAttack3),1,false)
    }
    else
    {
        other.vsp = -other.vsp;
        instance_destroy()
    }
    if instance_exists(obj_hominglock)
    {
        with(obj_hominglock)
        {
            instance_destroy()
        }
    }
    audio_play_sound(choose(snd_enemy_hit1,snd_enemy_hit2,snd_enemy_hit3),1,false)
}
else if instance_exists(obj_boostfx) ||  other.action == consPlayerActionSlide 
{

    if canHit
    {
        canHit = false
        y -= 10        
        if abs(other.hsp) &gt;= 4
            shake_camera(15)
        audio_play_sound(choose(snd_enemy_hit1,snd_enemy_hit2,snd_enemy_hit3),1,false)
        if other.ground
        {
            hspeed = other.hsp
            vspeed = -2.5
        }
        else
        {
            hspeed = other.hsp*cos(degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y-3)))*1.5
            vspeed = -other.vsp*sin(degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y-3)))*1.5
        }
        alarm[0] = 30
    }
    
}
else if other.action == consPlayerActionRoll || other.action == consPlayerActionStomp
{
    instance_destroy()
}
else if canHit &amp;&amp; other.canHit
{
    if other.rings &gt; 0
    {
        other.image_i = 0
        other.ground = false
        other.action = consPlayerActionDamaged
        other.vsp = -4
        other.hsp = -5*other.xdir
        other.canHit = false
        other.hitInvincible = 240
        scatter_rings()
    }
    else
    {
        other.image_i = 0
        other.ground = false
        other.action = consPlayerActionDead
        other.vsp = -4
        other.hsp = -5*other.xdir
        other.canHit = false
        other.alarm3 = 120
        obj_HUD_ingame.show = false
    }
}
vibrate_xbox_controller(10)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Tails">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.action == consPlayerActionJump || other.action == consPlayerActionRoll || other.action == consPlayerActionSpindashCharge || other.action == consPlayerActionSwingBarJump || other.action == consPlayerActionSlide)
{
    canHit = false
    
    if other.action == consPlayerActionJump
    {
        other.vsp = -other.vsp;
    }
    instance_destroy()
}
else if canHit &amp;&amp; other.canHit &amp;&amp; !other.super
{
    hurt_player()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Sonic">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.action == consPlayerActionJump || other.action == consPlayerActionSpindashCharge || other.action == consPlayerActionHomingTarget || other.action == consPlayerActionHomingNoTarget || other.action == consPlayerActionSwingBarJump ) &amp;&amp; !other.ground &amp;&amp; !instance_exists(obj_boostfx) //((other.character == "Sonic" &amp;&amp; (other.sprp == spr_Sonic_spinjump || other.sprp == spr_SuperSonic_spinjump || other.sprp == spr_Sonic_land || other.sprp == spr_SuperSonic_land)) || (other.character == "Shadow" &amp;&amp; (other.sprp == spr_Shadow_spinjump || other.sprp == spr_SuperShadow_spinjump || other.sprp == spr_Shadow_land || other.sprp == spr_SuperShadow_land))) 
{
    if other.action == consPlayerActionHomingTarget
    {
        other.image_i = 0
        other.action = consPlayerActionTrick
        
        if other.character == "Sonic"
        {
            if !other.super
                other.sprp = choose(spr_Sonic_trick1,spr_Sonic_trick2,spr_Sonic_trick3)
            else
                other.sprp = choose(spr_SuperSonic_trick1,spr_SuperSonic_trick2,spr_SuperSonic_trick3)
        }
        else if other.character == "Shadow"
        {
            if !other.super
                other.sprp = spr_Shadow_jump
            else
                other.sprp = spr_SuperShadow_jump
            other.image_i = 2
        }
        
        canHit = false
        hspeed = other.hspeed//xdir*other.hspeed*cos(degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y)))*0.5
        vspeed = other.vspeed//*sin(-degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y)))*0.5
        other.hsp = 0
        other.vsp = -6.5
        alarm[0] = 30
        
        
        if other.character == "Sonic"
            audio_play_sound(choose(snd_SonicAttack1,snd_SonicAttack2,snd_SonicAttack3),1,false)
        else if other.character == "Shadow"
            audio_play_sound(choose(snd_Shadow_Homing1,snd_Shadow_Homing2,snd_Shadow_Homing3),1,false)
    
    }
    else
    {
        other.vsp = -other.vsp;
        instance_destroy()
    }
    if instance_exists(obj_hominglock)
    {
        with(obj_hominglock)
        {
            instance_destroy()
        }
    }
    audio_play_sound(choose(snd_enemy_hit1,snd_enemy_hit2,snd_enemy_hit3),1,false)
}
else if instance_exists(obj_boostfx) ||  other.action == consPlayerActionSlide 
{

    if canHit
    {
        
        canHit = false
        y -= 10        
        if abs(other.hsp) &gt;= 4
            shake_camera(15)
        audio_play_sound(choose(snd_enemy_hit1,snd_enemy_hit2,snd_enemy_hit3),1,false)
        if other.ground
        {
            hspeed = other.hsp
            vspeed = -2.5
        }
        else
        {
            hspeed = other.hsp //other.hsp*cos(degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y-3)))*1.5
            vspeed = other.vsp //-other.vsp*sin(degtorad(point_direction(obj_Sonic.x,obj_Sonic.y,x,y-3)))*1.5
        }
        alarm[0] = 30
    }
    
}
else if other.action == consPlayerActionRoll || other.action == consPlayerActionStomp
{
    instance_destroy()
}
else if canHit &amp;&amp; other.canHit &amp;&amp; !other.super
{
    hurt_player()
    /*
    if other.rings &gt; 0
    {
        other.image_i = 0
        other.ground = false
        other.action = consPlayerActionDamaged
        other.vsp = -4
        other.hsp = -5*other.xdir
        other.canHit = false
        other.hitInvincible = 240
        scatter_rings()
    }
    else
    {
        other.image_i = 0
        other.ground = false
        other.action = consPlayerActionDead
        other.vsp = -4
        other.hsp = -5*other.xdir
        other.canHit = false
        other.alarm3 = 120
        obj_HUD_ingame.show = false
    }
    */
}
else if other.super
{
    instance_destroy()
}

vibrate_xbox_controller(10)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

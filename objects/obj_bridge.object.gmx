<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    // Destroy bridge nodes
    for (i=0; i&lt;NumLogs; i+=1) with (Logs[i]) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// ---- Variable declaration ---------------------------------------------------------------------------
    var PlayerCount, PlayerHandle, TensionPoint, DistanceFromCenter, LeftGradient, RightGradient, Left, Right;
    var CurrentHeight;

// ---- Routine ----------------------------------------------------------------------------------------

    // Set all logs heights to 0
    for (i=0; i&lt;NumLogs; i+=1) Heights[i] = 0;
    
    // Find out the logs height depending on the player objects
    if (instance_exists(obj_Sonic))
    {
        // Get number of player instances and run through them all
        PlayerCount = instance_number(obj_Sonic);
        for (i=0; i&lt;PlayerCount; i+=1)
        {
            // Grab object instance handle and check if it's on the bridge
            PlayerHandle = instance_find(obj_Sonic, i);
            
            if (PlayerHandle == noone) continue;

            if (!collision_rectangle(x, y-2, x+BridgeWidth, y+MaxTension, PlayerHandle, true, true)
             || !PlayerHandle.ground) continue;
            
            // Find tension point and calculate left and right and their gradients
            TensionPoint  = min(max(floor((PlayerHandle.x - x)/16),0),NumLogs-1);
            LeftGradient  = scrSafeDivision(pi*0.5, TensionPoint);
            RightGradient = scrSafeDivision(pi*0.5, NumLogs-TensionPoint);
            Left          = 0;
            Right         = pi;
            
            // Calculate distance from center
            DistanceFromCenter = MaxTension * (1-(abs(floor(PlayerHandle.x-x-HalfWidth)/HalfWidth)));
            
            // Reposition all bridge logs
            for (j=0; j&lt;=TensionPoint; j+=1)
            {
                CurrentHeight = sin(Left)*DistanceFromCenter;
                if (Heights[j] &lt; CurrentHeight) Heights[j] = CurrentHeight;
                
                Left           += LeftGradient;
            }
            for (j=NumLogs-1; j&gt;TensionPoint; j-=1)
            {
                CurrentHeight = sin(Right)*DistanceFromCenter;
                if (Heights[j] &lt; CurrentHeight) Heights[j] = CurrentHeight;

                Right          -= RightGradient;
            }
        }
    }

    // Now, change bridge's height
    for (i=0; i&lt;NumLogs; i+=1) Logs[i].y = scrLinearInterpolate(Logs[i].y, y+Heights[i], 0.2);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

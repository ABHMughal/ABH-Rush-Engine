<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_qte_keys</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0
time = 100
done = false
image_index = choose(0,1,2,3)
image_speed = 0
time -= 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if done
{
    if obj_Sonic.qte_amount &lt; 3
    {
        obj_Sonic.qte_amount += 1
        instance_create(x,y,obj_qte_button)
    }   
    else
    {
        obj_Sonic.qte_amount = 1
        obj_Sonic.action = 15
        obj_Sonic.vsp = -8
        obj_Sonic.image_i = 0
        obj_Sonic.grv = 0.21875;
        audio_play_sound(snd_qte_success,1,false)
        instance_create(x,y,obj_qte_success)
        
        if obj_Sonic.character == "Sonic"
            audio_play_sound(snd_SonicQTE,1,false)
        else if obj_Sonic.character == "Shadow"
            audio_play_sound(snd_ShadowQTE,1,false)
    }
    audio_play_sound(snd_qte_button_ok,1,false)
}
else
{
    obj_Sonic.qte_amount = 1
    audio_play_sound(snd_qte_fail,1,false)
    obj_Sonic.action = 15.5
    obj_Sonic.vsp = -3
    obj_Sonic.hsp = obj_Sonic.xdir*3
    obj_Sonic.grv = 0.21875;
    instance_create(x,y,obj_qte_fail)
    obj_Sonic.image_i = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_Sonic.input_mode == 0
    sprite_index = spr_qte_keys
if obj_Sonic.input_mode == 1
    sprite_index = spr_qte_xboxbuttons

key_A = keyboard_check_pressed(ord('A')) || gamepad_button_check_pressed(0,gp_face3)
key_S = keyboard_check_pressed(ord('S')) || gamepad_button_check_pressed(0,gp_face1)
key_D = keyboard_check_pressed(ord('D')) || gamepad_button_check_pressed(0,gp_face2)
key_W = keyboard_check_pressed(ord('W')) || gamepad_button_check_pressed(0,gp_face4)

x = view_xview[0] + view_wview[0]/2
y = view_yview[0] + view_hview[0]/2

time -= 1.5

if !done &amp;&amp; image_alpha &lt; 1
    image_alpha += 0.125

if time &gt; 0
{
    if image_index == 0
    {
        if key_A
        {    
            done = true
            time = 0
        }
        else if key_S || key_D || key_W
        {
            time = 0
        }
    }
    else if image_index == 1
    {
        if key_S
        {    
            done = true
            time = 0
        }
        else if key_A || key_D || key_W
        {
            time = 0
        }
    }
    else if image_index == 2
    {
        if key_D
        {    
            done = true
            time = 0
        }
        else if key_A || key_S || key_W
        {
            time = 0
        }
    }
    else if image_index == 3
    {
        if key_W
        {    
            done = true
            time = 0
        }
        else if key_A || key_S || key_D
        {
            time = 0
        }
    }
}
else
{
    if done
    {
        image_alpha -= 0.25
        image_xscale += 0.125
        image_yscale += 0.125
    }
    else
    {
        instance_destroy()
    }
}

if done &amp;&amp; image_alpha == 0
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

draw_circular_bar(x,y,time,100,make_color_rgb(100-time,time+155,0),25,1,5)
//draw_healthbar(x - 25, y + 25, x + 25, y + 28,time,c_gray,c_lime,c_lime,0,true,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

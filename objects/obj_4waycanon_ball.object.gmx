<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_4waycanon_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activate = false
animate = true
image_speed = 0
timer = 0
setTimer = 200
canUse = true
sides = instance_create(x,y,obj_4waycanon_sides)
sides_direction = 0
sides_img = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !activate
{
    sides.image_i = 0
    image_speed = 0
    image_index = 0
    if place_meeting(x,y,obj_Sonic) &amp;&amp; canUse &amp;&amp; obj_Sonic.action != consPlayerActionDead
    {
        timer = setTimer
        activate = true
        animate = true
        obj_Sonic.action = consPlayerAction4WayCanon
        canUse = false
        audio_play_sound(snd_4waycanon_start,1,false)
        audio_play_sound(snd_4waycanon_running,1,false)
    }   
}
else if activate &amp;&amp; obj_Sonic.action == consPlayerAction4WayCanon
{
    if animate
    {
        if keyboard_check(vk_up) || gamepad_button_check(0,gp_padu)
        {
            if sides.image_i == 0
            {
                sides.image_i = 5
                audio_play_sound(snd_4waycanon_set,1,false)
            }
            if sides.image_i &lt; 8 &amp;&amp; sides.image_i &gt;= 5
                sides.frame += 0.5
            sides_direction = 0
                
        }
        else if keyboard_check(vk_right) || gamepad_button_check(0,gp_padr)
        {
            if sides.image_i == 0
            {
                sides.image_i = 1
                audio_play_sound(snd_4waycanon_set,1,false)
            }
            if sides.image_i &lt; 4 &amp;&amp; sides.image_i &gt;= 1
                sides.frame += 0.5
            sides_direction = 270
        }
        else if keyboard_check(vk_left) || gamepad_button_check(0,gp_padl)
        {
            if sides.image_i == 0
            {
                sides.image_i = 9
                audio_play_sound(snd_4waycanon_set,1,false)
            }
            if sides.image_i &lt; 12 &amp;&amp; sides.image_i &gt;= 9
                sides.frame += 0.5
            sides_direction = 90
        }
        else if keyboard_check(vk_down) || gamepad_button_check(0,gp_padd)
        {
            if sides.image_i == 0
            {    
                sides.image_i = 13
                audio_play_sound(snd_4waycanon_set,1,false)
            }
            if sides.image_i &lt; 16 &amp;&amp; sides.image_i &gt;= 13
                sides.frame += 0.5
            sides_direction = 180
        }
        if keyboard_check_released(vk_up) || keyboard_check_released(vk_down) || keyboard_check_released(vk_left) || keyboard_check_released(vk_right) || gamepad_button_check_released(0,gp_padd) || gamepad_button_check_released(0,gp_padu) || gamepad_button_check_released(0,gp_padr) || gamepad_button_check_released(0,gp_padl)
            animate = false
    }
    else
    {
        sides.frame -= 0.5
        if (sides.image_i == 1 || sides.image_i == 5 || sides.image_i == 9 || sides.image_i == 13)
        {   
            animate = true 
            sides.image_i = 0
        }
    }
    
    obj_Sonic.x = x
    obj_Sonic.y = y
    image_speed += 0.5
    timer -= 1
    if timer &lt;= 0
    {
        activate = false
        obj_Sonic.action = consPlayerActionNormal
        audio_play_sound(snd_4waycanon_timeout,1,false)
    }
}
if !place_meeting(x,y,obj_Sonic) &amp;&amp; obj_Sonic.action != consPlayerAction4WayCanon
{
    canUse = true
    if audio_is_playing(snd_4waycanon_running)
        audio_stop_sound(snd_4waycanon_running)   
    activate = false
    sides_direction = 0
    sides_img = 0
    animate = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

draw_sprite_ext(spr_4waycanon_sideright,sides_img,x,y,1,1,sides_direction,c_white,1)
draw_sprite_ext(spr_4waycanon_sideleft,sides_img,x,y,1,1,sides_direction,c_white,1)
draw_sprite_ext(spr_4waycanon_sidedown,sides_img,x,y,1,1,sides_direction,c_white,1)
draw_sprite_ext(spr_4waycanon_sideup,sides_img,x,y,1,1,sides_direction,c_white,1)
    
if place_meeting(x,y,obj_Sonic) &amp;&amp; obj_Sonic.action == consPlayerAction4WayCanon &amp;&amp; (keyboard_check(vk_up) || keyboard_check(vk_down) || keyboard_check(vk_left) || keyboard_check(vk_right) || gamepad_button_check(0,gp_padd) || gamepad_button_check(0,gp_padu) || gamepad_button_check(0,gp_padr) || gamepad_button_check(0,gp_padl))
{
    if (sides_img &lt; 6 &amp;&amp; (keyboard_check(vk_up) || keyboard_check(vk_down) || keyboard_check(vk_left) || keyboard_check(vk_right) || gamepad_button_check(0,gp_padd) || gamepad_button_check(0,gp_padu) || gamepad_button_check(0,gp_padr) || gamepad_button_check(0,gp_padl)))
        sides_img += 1
} 
else //if !activate || ((keyboard_check(vk_up) || keyboard_check(vk_down) || keyboard_check(vk_left) || keyboard_check(vk_right)))
{
    if sides_img &gt; 0
        sides_img -= 1
    else
    {
        sides_img = 0
        sides_direction = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

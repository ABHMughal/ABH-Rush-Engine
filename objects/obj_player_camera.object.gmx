<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_camera</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>offset = 0
canFollow = true
shake = false
shakeoffset = 10

if instance_exists(obj_Sonic)
{
    x = obj_Sonic.x
    y = obj_Sonic.y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shake = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canFollow = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canFollow
{
    if !(obj_Sonic.action == consPlayerActionQTE &amp;&amp; abs(obj_Sonic.hsp) &lt;= 0.625 &amp;&amp; obj_Sonic.vsp &lt;= 0.3125)
    {
        if (obj_Sonic.action != consPlayerActionZipLineStart &amp;&amp; obj_Sonic.action != consPlayerActionZipLineTravel)
        {
            x = clamp(obj_Sonic.x + obj_Sonic.hsp*12*obj_Sonic.acos,obj_display_manager.ideal_width/2,room_width - (obj_display_manager.ideal_width/2));
            y = clamp(obj_Sonic.y + obj_Sonic.vsp*2,obj_display_manager.ideal_height/2,room_height - (obj_display_manager.ideal_height/2));
        
            view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * 0.2 + shake*choose(random(shakeoffset),-random(shakeoffset));
            
            if !obj_Sonic.ground 
                view_yview[0] += ((y-(view_hview[0]/2)) - view_yview[0]) * 0.9 + shake*choose(random(shakeoffset),-random(shakeoffset));
            else
                view_yview[0] = obj_Sonic.y - view_hview[0]/2 + shake*choose(random(shakeoffset),-random(shakeoffset));
        }
        else
        {
         /*
            x = clamp(obj_Sonic.x + obj_Sonic.hspeed*12*obj_Sonic.acos,obj_display_manager.ideal_width/2,room_width - (obj_display_manager.ideal_width/2));
            y = clamp(obj_Sonic.y + obj_Sonic.vspeed*2,obj_display_manager.ideal_height/2,room_height - (obj_display_manager.ideal_height/2));
            
            view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * 0.9 + shake*choose(random(shakeoffset),-random(shakeoffset));
                        
            if !obj_Sonic.ground 
                view_yview[0] += ((y-(view_hview[0]/2)) - view_yview[0]) * 0.9 + shake*choose(random(shakeoffset),-random(shakeoffset));
            else
                view_yview[0] = obj_Sonic.y - view_hview[0]/2 + shake*choose(random(shakeoffset),-random(shakeoffset));
            */
            x = clamp(obj_Sonic.x + obj_Sonic.hspeed*12 ,obj_display_manager.ideal_width/2,room_width - (obj_display_manager.ideal_width/2));
            y = clamp(obj_Sonic.y,obj_display_manager.ideal_height/2,room_height - (obj_display_manager.ideal_height/2));
    
            view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * 0.2
            //view_yview[0] += ((y-(view_hview[0]/2)) - view_yview[0]) * 0.9
            view_yview[0] = obj_Sonic.y - view_hview[0]/2
        }       
    }
    else
    {
        x = clamp(obj_Sonic.x,obj_display_manager.ideal_width/2,room_width - (obj_display_manager.ideal_width/2));
        y = clamp(obj_Sonic.y,obj_display_manager.ideal_height/2,room_height - (obj_display_manager.ideal_height/2));
    
        view_xview[0] = obj_Sonic.x - view_wview[0]/2
        view_yview[0] = obj_Sonic.y - view_hview[0]/2
    }
    
    if abs(obj_Sonic.hsp) &gt; 0 &amp;&amp; (keyboard_check(vk_left) || keyboard_check(vk_right))
        offset += abs(obj_Sonic.hsp)*obj_Sonic.acos*obj_Sonic.xdir
    else
    {   
        if offset &gt; 0
            offset -= 2
        else if offset &lt; 0
            offset += 2
        else
            offset = 0
    }
    if offset &gt; 125
        offset = 125
    if offset &lt; -125
        offset = -125    
}
else if obj_Sonic.stageClear
{
    if instance_exists(obj_goalring)
    {
        x = obj_goalring.x
        y = obj_goalring.y
        
        view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * 0.5
        view_yview[0] += ((y-(view_hview[0]/2)) - view_yview[0]) * 0.5
    }
}
view_xview[0] = floor(view_xview[0])
view_yview[0] = floor(view_yview[0])

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

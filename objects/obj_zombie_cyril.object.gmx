<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cyril1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_nonbadnik</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

image_speed = 0.125
sound = snd_zombiedamage

throw_speed = 20

left_angle = 0
right_angle = 0

left_arm = spr_cyril_leftarm
right_arm = spr_cyril_rightarm

left_state = 0
right_state = 0

throw_axe = 0

draw_arm_position = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
var i = instance_create(x,y,obj_explosion_small)
with (i)
{
    sprite_index = spr_explosion_zombie
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

if image_index == 0
    draw_arm_position = 0
else if (image_index == 3 || image_index == 6)
    draw_arm_position = 1
else 
    draw_arm_position = 2
if image_index &gt; 6
    image_index = 0

if left_state == 3
    left_arm = spr_cyril_eleftarm
if right_state == 3
    right_arm = spr_cyril_erightarm

if canHit
{
    if distance_to_object(obj_Sonic) &lt; 180  &amp;&amp; ((obj_Sonic.x &lt; x &amp;&amp; image_xscale == 1) || (obj_Sonic.x &gt; x &amp;&amp; image_xscale == -1)) &amp;&amp; (obj_Sonic.y &lt; y + 40 &amp;&amp; obj_Sonic.y &gt; y - 15)
    {
        if throw_axe == 0
        {
            if right_state == 0
                right_state = 1
        }
        else if throw_axe == 1
        {
            if right_state == 3 &amp;&amp; left_state == 0
                left_state = 1
        }
        else
        {
            right_state = 3
            left_state = 3
        }
        
    }
    
    if right_state == 1
    {
        right_angle += -throw_speed*image_xscale
        if abs(right_angle) &gt;= 180
            right_state = 2
    }
    else if right_state == 2
    {
        right_angle -= -throw_speed*image_xscale
        if abs(right_angle) &lt; 90
        {
            right_state = 3
            throw_axe = 1
            instance_create(x-10*image_xscale,y,obj_cyril_axe)
        }
    }
    else
    {
        right_angle = 0   
    }
        
        
        
    if left_state == 1
    {
        left_angle += -throw_speed*image_xscale
        if abs(left_angle) &gt;= 180
            left_state = 2
    }
    else if left_state == 2
    {
        left_angle -= -throw_speed*image_xscale
        if abs(left_angle) &lt; 90
        {
            left_state = 3
            throw_axe = 2
            var axe = instance_create(x-10*image_xscale,y,obj_cyril_axe)
            with(axe)
            {
                image_xscale = self.image_xscale
            }
        }
    }
    else
    {
        left_angle = 0   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

draw_self()

draw_sprite_ext(right_arm,0,x-image_xscale*7,y-image_yscale*8 + draw_arm_position,image_xscale,image_yscale,right_angle,c_white,1)
draw_sprite_ext(left_arm,0,x+image_xscale*10,y-image_yscale*8 + draw_arm_position,image_xscale,image_yscale,left_angle,c_white,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sparkle_trail</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_Sonic.boostamount &lt;= 0 || obj_Sonic.stageClear
{
    instance_destroy()
    exit
}


image_speed = 0.4
depth = obj_Sonic.depth - 2
image_alpha = 0

airtime = 240

alive = true
image_angle = point_direction(obj_Sonic.x_begin,obj_Sonic.y_begin,x,y)

obj_player_camera.canFollow = false
if abs(obj_Sonic.hsp) &lt; 5
    obj_player_camera.alarm[0] = 10
else 
    obj_player_camera.alarm[0] = 4


obj_Sonic.hsp = obj_Sonic.hspl*obj_Sonic.xdir;

instance_create(obj_Sonic.x,obj_Sonic.y,obj_boostsw)

audio_play_sound(snd_boost_start,1,false)
audio_play_sound(snd_boost_continue,1,false)
audio_play_sound(snd_boost_loop,1,true)

if obj_Sonic.character == "Sonic"
    audio_play_sound(choose(snd_SonicGo,snd_SonicBoost1,snd_SonicBoost2),1,false)
else if obj_Sonic.character == "Shadow"
    audio_play_sound(choose(snd_Shadow_Boost1,snd_Shadow_Boost2,snd_Shadow_Boost3),1,false)
    
vibrate_xbox_controller(30)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_boost_continue)
audio_stop_sound(snd_boost_loop)
obj_Sonic.boosting = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alive
{
    if !obj_Sonic.super
    {
        if obj_Sonic.character == "Sonic"
            sprite_index = spr_boost
        else if obj_Sonic.character == "Shadow"
            sprite_index = spr_boost_shadow
    }
    else
        sprite_index = spr_boost_super     
       
    obj_Sonic.boostamount -= 0.2
    x = obj_Sonic.x
    y = obj_Sonic.y
    
    if !obj_Sonic.ground
        airtime -= 1
    else
        airtime = 240
    
    if image_alpha &lt; 1
        image_alpha += 0.125
    
    //if obj_Sonic.action != consPlayerActionCorkscrew &amp;&amp; obj_Sonic.action != consPlayerActionCorkscrewRoll
        image_angle = obj_Sonic.boost_direction //point_direction(obj_Sonic.x_begin,obj_Sonic.y_begin,x,y);
    
    if image_angle &gt; 90 &amp;&amp; image_angle &lt; 270
        image_yscale = -1
        
    if ((!keyboard_check(ord('A')) &amp;&amp; obj_Sonic.input_mode == 0) || (!gamepad_button_check(0,gp_face3) &amp;&amp; obj_Sonic.input_mode == 1)) || obj_Sonic.boostamount &lt;= 0 || obj_Sonic.key_boostr 
    || obj_Sonic.action == consPlayerActionSwingBar || obj_Sonic.action == consPlayerActionQTE || obj_Sonic.action == consPlayerActionHomingNoTarget || obj_Sonic.action == consPlayerActionHomingTarget
    || obj_Sonic.action == consPlayerAction4WayCanon || obj_Sonic.action == consPlayerActionJumpPanelJump || obj_Sonic.action == consPlayerActionPulley 
    || obj_Sonic.action == consPlayerActionJumpPanelLand || obj_Sonic.action == consPlayerActionDead || obj_Sonic.stageClear 
    || (obj_Sonic.ground &amp;&amp; obj_Sonic.hsp &lt; 2 &amp;&amp; obj_Sonic.hsp &gt; -2) || airtime &lt; 0 || obj_Sonic.action == consPlayerActionPole 
    || obj_Sonic.action == consPlayerActionBungee  
        alive = false
}        
else
{
    image_alpha -= 0.125
    if image_alpha &lt;= 0
        instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_add)
draw_self()
draw_set_blend_mode(bm_normal)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

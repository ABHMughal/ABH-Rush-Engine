<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>button_distance = 30

button1 = instance_create(x,y,obj_qte3_button)
button2 = instance_create(x,y,obj_qte3_button)
button3 = instance_create(x,y,obj_qte3_button)

button1.image_alpha = 0 
button2.image_alpha = 0
button3.image_alpha = 0

button1.image_speed = 0 
button2.image_speed = 0
button3.image_speed = 0

button1.image_index = choose(0,1,2,3) 
button2.image_index = choose(0,1,2,3)
button3.image_index = choose(0,1,2,3)

if(button1.image_index == 0 &amp;&amp; button2.image_index == 1 &amp;&amp; button3.image_index == 1)
    button3.image_index = choose(0,2)


x_button1 = view_xview[0] + view_wview[0]/2 - button_distance
y_button1 = view_yview[0] + view_hview[0]/2 
done_button1 = false

x_button2 = view_xview[0] + view_wview[0]/2
y_button2 = view_yview[0] + view_hview[0]/2 
done_button2 = false

x_button3 = view_xview[0] + view_wview[0]/2 + button_distance
y_button3 = view_yview[0] + view_hview[0]/2 
done_button3 = false

time = 100
timerate = 0.75
timevalue = 0
done = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if done
{
    obj_Sonic.qte_amount = 1
    obj_Sonic.image_i = 0
    audio_play_sound(snd_qte_success,1,false)
    message = instance_create(x,y,obj_qte3_buttons)
    
}
else
{
    obj_Sonic.qte_amount = 1
    audio_play_sound(snd_qte_fail,1,false)
    obj_Sonic.action = 15.5
    obj_Sonic.vsp = -3
    obj_Sonic.hsp = obj_Sonic.xdir*3
    instance_create(x,y,obj_qte_fail)
    obj_Sonic.grv = 0.21875;
    obj_Sonic.image_i = 0
    if obj_Sonic.character == "Sonic"
        audio_play_sound(snd_SonicQTE,1,false)
    else if obj_Sonic.character == "Shadow"
        audio_play_sound(snd_ShadowQTE,1,false)
}
with(button1)
    instance_destroy()
with(button2)
    instance_destroy()
with(button3)
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_A = keyboard_check_pressed(ord('A')) || gamepad_button_check_pressed(0,gp_face3)
key_S = keyboard_check_pressed(ord('S')) || gamepad_button_check_pressed(0,gp_face1)
key_D = keyboard_check_pressed(ord('D')) || gamepad_button_check_pressed(0,gp_face2)
key_W = keyboard_check_pressed(ord('W')) || gamepad_button_check_pressed(0,gp_face4)

time -= timerate

x_button1 = view_xview[0] + view_wview[0]/2 - button_distance
y_button1 = view_yview[0] + view_hview[0]/2 

x_button2 = view_xview[0] + view_wview[0]/2
y_button2 = view_yview[0] + view_hview[0]/2 

x_button3 = view_xview[0] + view_wview[0]/2 + button_distance
y_button3 = view_yview[0] + view_hview[0]/2 

if time &gt; 0
{
    button1.x = x_button1
    button2.x = x_button2
    button3.x = x_button3
    
    button1.y = y_button1
    button2.y = y_button2
    button3.y = y_button3
    
    
    if !done_button1 &amp;&amp; button1.image_alpha &lt; 1
        button1.image_alpha += 0.125
    if !done_button2 &amp;&amp; button2.image_alpha &lt; 1
        button2.image_alpha += 0.125
    if !done_button3 &amp;&amp; button3.image_alpha &lt; 1
        button3.image_alpha += 0.125 
    
    if !done_button1 &amp;&amp; !done_button2 &amp;&amp; !done_button3
    {
        if button1.image_index == 0
        {
            if key_A
            {    
                done_button1 = true
            }
            else if key_S || key_D || key_W
            {
                time = 0
            }
        }
        else if button1.image_index == 1
        {
            if key_S
            {    
                done_button1 = true
            }
            else if key_A || key_D || key_W
            {
                time = 0
            }
        }
        else if button1.image_index == 2
        {
            if key_D
            {    
                done_button1 = true
            }
            else if key_A || key_S || key_W
            {
                time = 0
            }
        }
        else if button1.image_index == 3
        {
            if key_W
            {    
                done_button1 = true
            }
            else if key_A || key_S || key_D
            {
                time = 0
            }
        }
        if done_button1
            audio_play_sound(snd_qte_button_ok,1,false)
    }
    else if done_button1 &amp;&amp; !done_button2 &amp;&amp; !done_button3
    {
        if button2.image_index == 0
        {
            if key_A
            {    
                done_button2 = true
            }
            else if key_S || key_D
            {
                time = 0
            }
        }
        else if button2.image_index == 1
        {
            if key_S
            {    
                done_button2 = true
            }
            else if key_A || key_D
            {
                time = 0
            }
        }
        else if button2.image_index == 2
        {
            if key_D
            {    
                done_button2 = true
            }
            else if key_A || key_S
            {
                time = 0
            }
        }
        else if button2.image_index == 3
        {
            if key_W
            {    
                done_button2 = true
            }
            else if key_A || key_S || key_D
            {
                time = 0
            }
        }
        if done_button2
            audio_play_sound(snd_qte_button_ok,1,false)
    } 
    else if done_button1 &amp;&amp; done_button2 &amp;&amp; !done_button3
    {
        if button3.image_index == 0
        {
            if key_A
            {    
                done_button3 = true
            }
            else if key_S || key_D
            {
                time = 0
            }
        }
        else if button3.image_index == 1
        {
            if key_S
            {    
                done_button3 = true
            }
            else if key_A || key_D
            {
                time = 0
            }
        }
        else if button3.image_index == 2
        {
            if key_D
            {    
                done_button3 = true
            }
            else if key_A || key_S
            {
                time = 0
            }
        }
        else if button3.image_index == 3
        {
            if key_W
            {    
                done_button3 = true
            }
            else if key_A || key_S || key_D
            {
                time = 0
            }
        }
        if done_button3
            audio_play_sound(snd_qte_button_ok,1,false)
    }   
    else 
    {
        done = true
        timevalue = time
        time = 0
    }
     
}
else
{
    instance_destroy()
}

if !done &amp;&amp; time &gt; 0
{
    if done_button1 &amp;&amp; button1.image_alpha &gt; 0
    {
        button1.image_alpha -= 0.125
        button1.image_xscale += 0.125
        button1.image_yscale += 0.125
    }
    
    if done_button2 &amp;&amp; button2.image_alpha &gt; 0
    {
        button2.image_alpha -= 0.125
        button2.image_xscale += 0.125
        button2.image_yscale += 0.125
    }
    
    if done_button3 &amp;&amp; button3.image_alpha &gt; 0
    {
        button3.image_alpha -= 0.125
        button3.image_xscale += 0.125
        button3.image_yscale += 0.125
    }
}
x = x_button2
y = y_button2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_healthbar(x_button1 - 25, y_button2 + 25, x_button3 + 25, y_button2 + 28,time,c_gray,c_lime,c_lime,0,true,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

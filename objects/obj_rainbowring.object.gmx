<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rainbowring</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.25;
outerring = instance_create(x,y,obj_rainbowring_outer)
outerring.image_angle = image_angle;
outerring.depth = -10
outerring.image_speed = image_speed

force_power = 12
alarm_amount = 30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !place_meeting(x,y,obj_Sonic)
    activate = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Sonic">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if activate &amp;&amp; other.action != consPlayerActionDead
{
    if image_angle == 0 || image_angle == 180
    {    
        other.grv = 0
        other.alarm0 = alarm_amount
        other.action = consPlayerActionDashRing    
    }
    else
    {
        other.action = consPlayerActionSpringJump
        if other.character == consPlayerNameSonic
        {
            if image_angle == 45 || image_angle == 135
            {   
                other.image_i = 0
                if other.super
                    other.sprp = spr_SuperSonic_corkscrew
                else
                    other.sprp = spr_Sonic_corkscrew
            }
            else if (image_angle &gt; 0 &amp;&amp; image_angle &lt; 45) || (image_angle &lt; 180 &amp;&amp; image_angle &gt; 135)
            {
                if other.super
                    other.sprp = spr_SuperSonic_walljump
                else
                    other.sprp = spr_Sonic_walljump
            }
            else
            {
                if other.super
                    other.sprp = spr_SuperSonic_jump
                else
                    other.sprp = spr_Sonic_jump
            }
        }
        else if other.character == consPlayerNameShadow
        {
            if image_angle == 45 || image_angle == 135
            {   
                other.image_i = 0
                if other.super
                    other.sprp = spr_SuperShadow_corkscrew
                else
                    other.sprp = spr_Shadow_corkscrew
            }
            else if (image_angle &gt; 0 &amp;&amp; image_angle &lt; 45) || (image_angle &lt; 180 &amp;&amp; image_angle &gt; 135)
            {
                if other.super
                    other.sprp = spr_SuperShadow_walljump
                else
                    other.sprp = spr_Shadow_walljump
            }
            else
            {
                if other.super
                    other.sprp = spr_SuperShadow_jump
                else
                other.sprp = spr_Shadow_jump
                if image_angle &lt;= -45 &amp;&amp; image_angle &gt;= -135
                    other.image_i = 10
            }
        }
        else if other.character == consPlayerNameTails
        {
            if image_angle == 45 || image_angle == 135
            {   
                other.sprp = spr_Tails_corkscrew
            }
            else if (image_angle &gt; 0 &amp;&amp; image_angle &lt; 45) || (image_angle &lt; 180 &amp;&amp; image_angle &gt; 135)
            {
                other.sprp = spr_Tails_walljump
            }
            else
            {
                if image_angle &lt; 0 &amp;&amp; image_angle &gt; -180
                {
                    other.image_i = 9
                    other.action = consPlayerActionNormal
                }
                other.sprp = spr_Tails_jump
            }
        }
    }
    other.ground = false
    if(other.character != consPlayerNameTails)
    other.image_i = 0;
    other.x = x
    other.y = y
    activate = false
    //other.ground = false
    other.hsp = cos(degtorad(image_angle))*force_power
    other.vsp = -sin(degtorad(image_angle))*force_power
    if image_angle &lt; 90 &amp;&amp; image_angle &gt; 270
        other.xdir = 1
    else if image_angle &gt; 90 &amp;&amp; image_angle &lt; 270
        other.xdir = -1
    if audio_is_playing(snd_rainbowring)
        audio_stop_sound(snd_rainbowring)
    audio_play_sound(snd_rainbowring,1,false)
    effect = instance_create(x,y,obj_rainbowring_activate)
    effect.image_angle = image_angle
    
    draw_effect(spr_rainbowring_fx, 0, 1, 1, true)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
